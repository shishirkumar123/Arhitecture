https://www.youtube.com/watch?v=QFaFIcGhPoM&list=PLC3y8-rFHvwgg3vaYJgHGnModB54rxOk3

Setup

1.Download NodeJS and VS Code editor.
Note: Along with NodeJS, npm, chocolatey also gets installed.
Chocolatey is a Windows package manager that helps install, upgrade, and uninstall packages, and more.

2. Build app (Reference: https://github.com/facebook/create-react-app)
	Option 1: using npx
>npx create-react-app my-app (npx is npm package runner. bundled with node.)
Need to install the following packages:
  create-react-app
Ok to proceed? (y)
>cd my-app
>npm start   - it will search for package.json and start the server, open the browser - http://localhost:3000/

	Option 2: using npm
>npm install create-react-app -g
>create-react-app <projectname>	


[npm vs npx - NPM (Node Package Manager) and NPX (Node Package Execute) are both tools for working with JavaScript packages:
    NPM installs packages in a project's directory in a subdirectory called node_modules
    NPX - Executes packages directly without installing them. NPX searches node_modules for a package and runs it. If the 
          package isn't found, it's downloaded and then run.
]

[
  npm start  -> Starts the development server.
  npm stop
  npm run build  ->  Bundles the app into static files for production.
  npm test  -> Starts the test runner.
  npm run eject  ->  Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you can’t go back!
]
----------
Code snippet
1. rfce for skeleton with function
2. rce for skeleton with class
3. rconst for constructor
4. rpce for pure component 
----------
Four approaches for event binding
1. Binding in render -                   this.<handler>.bind(this)                          - Performace issue
2. Binding in render using '=>' -        {() => this.<handler>}
3. Binding in class constructor -        this.<handler> = this.<handler>.bind(this)	    - recommended
4. class property as '=>' function	<handler> = () => {...}                             - this is also okay

----------------
Styling react component
1. CSS stylesheet
2. Inline styling
3. CSS Module
4. CSS in JS Library

----------
Why do we need portal(ReactDOM.createPortal)
One of the use case: having to deal with Parent component css when the chikd component is a modal, a popup
or a tool tip.
https://www.youtube.com/watch?v=HpHLa-5Wdys&list=PLC3y8-rFHvwgg3vaYJgHGnModB54rxOk3&index=31

--------------
Progressive Web App(PWA)

---------------
public(folder)
    index.html - main container
    manifest.json - For a Progressive Web App (PWA), the manifest.json defines how your app should appear when installed on a user's device or added to the home screen. It provides properties like the app's name, icon, background color, theme color, and more.
When the app is installed, it appears like a native app, with a proper icon, title, and behavior that matches what you’d expect from a regular mobile or desktop app.

A Progressive Web App (PWA) is a type of web application that aims to deliver a native app-like experience using standard web technologies (HTML, CSS, JavaScript). PWAs combine the best features of both web and mobile applications, offering a fast, reliable, and engaging user experience, regardless of network conditions or device type.

------------------------

Error boundry - React components that catch JavaScript error in their child component tree, log those
errors, and display a fallback UI.

They implements either one or both of te lifecycle methods 
1. getDerivedStateFromError - used to render a fallbackUI after error
2. componentDidCatch - log the error info.
becomes an error boundry


export default explanation -



Simplest Understanding for default export is

Export is ES6's feature which is used to Export a module(file) and use it in some other module(file).

Default Export:

default export is the convention if you want to export only one object(variable, function, class) from the file(module).
There could be only one default export per file, but not restricted to only one export(Named export).
When importing default exported object we can rename it as well.
Export or Named Export:

It is used to export the object(variable, function, class) with the same name.

It is used to export multiple objects from one file.

It cannot be renamed when importing in another file, it must have the same name that was used to export it, but we can create its alias by using as operator.

In React, Vue and many other frameworks the Export is mostly used to export reusable components to make modular based applications.

