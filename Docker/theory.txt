Docker architecture
	- client - server architecture
	- Daemon(server) receives the commands from Docker client through CLI or rest API'server
	- Daemon and client can be on same or different host.
	
Play with docker-
	- https://labs.play-with-docker.com/
	
Install docker on ubuntu 16.04
>sudo apt-get install docker.io
>docker version
Warning : docker group grants privileges equivalent to the root - https://docs.docker.com/install/linux/linux-postinstall/. So do the below-
>sudo groupadd docker ... check rest of the solution on website
>docker run busybox echo hello
>docker run -it ubuntu bash(it for interactive)
this will take time, once done we will be inside ubuntu container. run below commands to make this ubuntu container more useful-
>apt-get update
>apt-get install curl
>exit - exits the container
>docker ps
>docker images
Run docker container normal-
>docker run jpetazzo/clock [person'sid/imagename]
now in background-
>docker run -d jpetazzo/clock [-d for daemon]
check logs
>docker logs <container id> [docker logs 1 worked for me]
>docker logs tail -5 <container id>
history of docker container we ran-
>docker ps -a
>docker ps -a -q
kill docker instance
>docker kill - immediate
>docker stop - graceful
>docker start
multiple ways to create new image
>docker commit, docker build, docker import
===========================================================
# Create App
# Docker image sample -
---
<mongo.yaml>
version: '3'
service:
	my-app:
		image:435354235.dkr.dsf.sdf.amozonaws.com/my-app:1.0   --> prefix needed if not from dockerhub 
		ports:
			- 3000:3000
	mongodb:
		image: mongo --> no prefix needed if from dockerhub
		ports:
			- 27017:27017
		environment
			- mongo-root-uname:dfsff
			- mongo-root-pwd: sdf#123
		volumes:
			- mongo-data:/data/db  -->path inside the container

---
# Create Dockerfile
Folder structure
	app
		-images <folder>
		-index.html 
		-nodes_modules
		-package.json
		-package_lock.json
		-server.js
	Dockerfile
-------------
Dockerfile content -

FROM node:13-alpine
ENV dbuser=admin
	db password=dfnlkl@1
RUN mkdir -p /home/app 		----> any unix command can be run like this
COPY .app /home/app
CMD ["node", "/home/app/server.js"]
-----------------

# Commited the App including Dockerfile to git

# Build image
Option 1: Build image yourself
	> docker build -t my-app:1.0
Option 2: Have a jenkins set up so that when you commit app+docker file, jenkins build the image based on the Dockerfile.

Note: Whenever update Dockerfile, rebuild the image

# See List of images
[~]docker images
# Delete an image
[~]docker rmi <image-name>
But first make sure containers of that image is deleted
[~]docker ps -a | grep my-app -> find the container
[~]docker rm <container-name> 

#Go inside container
>/ # docker exec -it <contianer-id> /bin/sh  or /bin/bash          - it for interactive
>/ # ls
>/ # exit
[~]

# Run container
docker run my-app1.0

# docker pull <image-name>
# docker push <image-name>
# docker tag <image-name>
=========================================================================
ECR - Docker Registry at AWS
